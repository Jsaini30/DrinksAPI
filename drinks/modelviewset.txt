
from .models import Drink
from .serializer import DrinkSerializer
from rest_framework.decorators import api_view
from rest_framework.response import Response
from rest_framework import status
from drf_yasg import openapi
from drf_yasg.utils import swagger_auto_schema
from rest_framework import viewsets


desc = openapi.Parameter('desc', in_=openapi.IN_QUERY,
                           type=openapi.TYPE_STRING)


@api_view(['GET','POST'])

@swagger_auto_schema(
        operation_description="give description  to get showroom details",
        manual_parameters=[desc],
    )

def drink_list(request):
    
    if request.method =='GET':
        drinks=Drink.objects.all()
        serializer=DrinkSerializer(drinks,many=True)
        return Response(serializer.data)     

    if request.method=='POST':
        serializer=DrinkSerializer(data=request.data)
        if serializer.is_valid():
            serializer.save()
            return Response(serializer.data,status=status.HTTP_201_CREATED)




@api_view(['GET','PUT','DELETE'])
def drink_detail(request,pk ,method=None):
    try:
        print(pk)
        drink = Drink.objects.get(id=pk)
        print(drink)
    except Drink.DoesNotExist:
        return Response(status=status.HTTP_404_NOT_FOUND)

    if request.method =='GET':
        serializer = DrinkSerializer(drink)
        return Response(serializer.data)    


    elif request.method=='PUT':
        serializer = DrinkSerializer(drink,data= request.data())
        if serializer.is_valid():
            serializer.save()
            return Response(serializer.data)
        return Response(serializer.errors,status-status.HTTP_400_BAD_REQUEST)


    elif request.method =='DELETE':
        drink.delete()
        return Response(status=status.HTTP_204_NO_CONTENT)